[{"/home/alazar/Desktop/Inspection-Dashboard/src/index.js":"1","/home/alazar/Desktop/Inspection-Dashboard/src/serviceWorker.js":"2","/home/alazar/Desktop/Inspection-Dashboard/src/App.js":"3","/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateLayout.js":"4","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Dashboard.js":"5","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Inspect.js":"6","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/auth/Login.js":"7","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Settings.jsx":"8","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Vehicles.jsx":"9","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/User.jsx":"10","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Drivers.jsx":"11","/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateNavContent.js":"12","/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateHeader.js":"13","/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateContent.js":"14","/home/alazar/Desktop/Inspection-Dashboard/src/layouts/SharedFooter.js":"15","/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateNavHeader.js":"16","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Navigation.js":"17","/home/alazar/Desktop/Inspection-Dashboard/src/components/Tables/UserTable.js":"18","/home/alazar/Desktop/Inspection-Dashboard/src/components/Cards/CardUser.js":"19","/home/alazar/Desktop/Inspection-Dashboard/src/components/Cards/CardVehicle.js":"20","/home/alazar/Desktop/Inspection-Dashboard/src/components/Cards/CardDriver.js":"21","/home/alazar/Desktop/Inspection-Dashboard/src/components/Charts/Chart.js":"22"},{"size":430,"mtime":1612523920552,"results":"23","hashOfConfig":"24"},{"size":5085,"mtime":1611573698839,"results":"25","hashOfConfig":"24"},{"size":1910,"mtime":1612773284265,"results":"26","hashOfConfig":"24"},{"size":2435,"mtime":1612524893486,"results":"27","hashOfConfig":"24"},{"size":1079,"mtime":1612790159440,"results":"28","hashOfConfig":"24"},{"size":14489,"mtime":1612789910378,"results":"29","hashOfConfig":"24"},{"size":1330,"mtime":1611991870953,"results":"30","hashOfConfig":"24"},{"size":264,"mtime":1611731251552,"results":"31","hashOfConfig":"24"},{"size":9288,"mtime":1612179986421,"results":"32","hashOfConfig":"24"},{"size":158,"mtime":1612598160794,"results":"33","hashOfConfig":"24"},{"size":11237,"mtime":1612183008635,"results":"34","hashOfConfig":"24"},{"size":2138,"mtime":1612773063246,"results":"35","hashOfConfig":"24"},{"size":2992,"mtime":1611823511910,"results":"36","hashOfConfig":"24"},{"size":445,"mtime":1612524615296,"results":"37","hashOfConfig":"24"},{"size":636,"mtime":1612790491819,"results":"38","hashOfConfig":"24"},{"size":1079,"mtime":1611829803971,"results":"39","hashOfConfig":"24"},{"size":277,"mtime":1612773479036,"results":"40","hashOfConfig":"24"},{"size":2467,"mtime":1612789910378,"results":"41","hashOfConfig":"24"},{"size":1632,"mtime":1612789910522,"results":"42","hashOfConfig":"24"},{"size":1685,"mtime":1612789910522,"results":"43","hashOfConfig":"24"},{"size":1680,"mtime":1612789910522,"results":"44","hashOfConfig":"24"},{"size":803,"mtime":1612791833176,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"17imko8",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/alazar/Desktop/Inspection-Dashboard/src/index.js",[],["95","96"],"/home/alazar/Desktop/Inspection-Dashboard/src/serviceWorker.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/App.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateLayout.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Dashboard.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Inspect.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/auth/Login.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Settings.jsx",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Vehicles.jsx",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/User.jsx",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Drivers.jsx",[],"/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateNavContent.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateHeader.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateContent.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/layouts/SharedFooter.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateNavHeader.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Navigation.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/Tables/UserTable.js",["97"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useState, useEffect } from 'react';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\n\nexport default function BasicTable() {\n  const classes = useStyles();\n\n  const [ error, setError ] = useState(null);\n  const [ isLoaded, setIsLoaded ] = useState(false);\n  const [ users, setUsers ] = useState([])\n\n  useEffect(() => {\n      fetch('http://192.168.1.103:8080/api/user')\n      .then(res => res.json())\n      .then(\n          (result) => {\n              setIsLoaded(true)\n              setUsers(result)\n          },\n          (error) => {\n              setIsLoaded(true)\n              setError(error)\n          }\n      )\n  }, [])\n\n  if (error) {\n      return <div>{error.message}</div>\n  } else if (!isLoaded) {\n      return <div>Loading...</div>\n  } else {\n      return (\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>First Name</TableCell>\n              <TableCell align=\"left\">Last Name</TableCell>\n              <TableCell align=\"left\">Email</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.map((user) => (\n              <TableRow key={user.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {user.name}\n                </TableCell>\n                <TableCell align=\"left\"></TableCell>\n                <TableCell align=\"left\">{user.email}</TableCell>\n                {/* <TableCell align=\"right\">{row.fat}</TableCell>\n                <TableCell align=\"right\">{row.carbs}</TableCell>\n                <TableCell align=\"right\">{row.protein}</TableCell> */}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )\n  }\n  \n}\n","/home/alazar/Desktop/Inspection-Dashboard/src/components/Cards/CardUser.js",["98","99"],"import { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { useState, useEffect } from 'react';\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 300,\n    // marginLeft: 40,\n    backgroundColor: 'yellow',\n    margin: '0px 50px',\n  },\n  title: {\n    fontSize: 14,\n  },\n  text: {\n    fontSize: 30\n  },\n  num: {\n    fontSize: 50,\n    marginTop: 15\n  },\n\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst CardUser =() => {\n  const classes = useStyles();\n\nconst [ error, setError ] = useState(null) ;\nconst [ isLoaded, setIsLoaded ] = useState(false);\nconst [ users, setUsers ] = useState([]);\nuseEffect(() => {\n  fetch('http://192.168.1.103:8080/api/user')\n  .then(res => res.json())\n  .then(\n    (result) => {\n      setIsLoaded(true)\n      setUsers(result)\n    },\n    (error) => {\n      setIsLoaded(true)\n      setError(error)\n    }\n  )\n},[])\n\nif (!isLoaded) {\n  return <div>Loading</div>\n} else if (error) {\n  <div>{error.message}</div>\n} else {\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography>\n          Users\n        </Typography>\n        <Typography className={classes.num} color=\"textPrimary\">\n          {users.length}\n        </Typography>\n        <Typography className={classes.text} variant=\"body2\" component=\"p\">\n          Users\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\n\n}\n\nexport default CardUser;","/home/alazar/Desktop/Inspection-Dashboard/src/components/Cards/CardVehicle.js",["100","101"],"import { makeStyles } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 300,\n    backgroundColor: 'red',\n    margin: '0px 50px'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  num: {\n    fontSize: 50,\n    marginTop: 15,\n  },\n  text: {\n    fontSize: 30\n  }\n});\n\nconst CardVehicle = () => {\n  const classes = useStyles();\n\n  const [ error, setError ] = useState(null);\n  const [ isLoaded, setIsLoaded ] = useState(false);\n  const [ vehicles, setVehicles ] = useState([])\n\n  useEffect(() => {\n    fetch('http://192.168.1.103:8080/api/driver')\n    .then(res => res.json())\n    .then(\n      (result) => {\n        setIsLoaded(true)\n        setVehicles(result)\n      },\n      (error) => {\n        setIsLoaded(true)\n        setError(error)\n      }\n    )\n  }, [])\n\n  if (!isLoaded) {\n    return <div>Loading...</div>\n  } else if (error){\n    <div>{error.message}</div>\n  } else {\n    return (\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography>\n            Vehicles\n          </Typography>\n          <Typography className={classes.num} variant=\"body2\" component=\"p\">\n            {vehicles.length}\n          </Typography>\n          <Typography className={classes.text}>\n            Vehicles\n          </Typography>\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\nexport default CardVehicle;","/home/alazar/Desktop/Inspection-Dashboard/src/components/Cards/CardDriver.js",["102","103"],"import { makeStyles } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 300,\n    backgroundColor: 'green',\n    margin: '0px 50px'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  num: {\n    fontSize: 50,\n    marginTop: 15\n  },\n  text: {\n    fontSize: 30\n  }\n});\n\nconst CardDriver = () => {\n  const classes = useStyles();\n\n  const [ error, setError ] = useState(null);\n  const [ isLoaded, setIsLoaded ] = useState(false);\n  const [ drivers, setDrivers ] = useState([])\n\n  useEffect(() => {\n    fetch('http://192.168.1.103:8080/api/driver')\n    .then(res => res.json())\n    .then(\n      (result) => {\n        setIsLoaded(true)\n        setDrivers(result);\n      },\n      (error) => {\n        setIsLoaded(true)\n        setError(null)\n      }\n    )\n  }, [])\n\n  if (error) {\n    return <div>{error.message}</div>\n  } else if (!isLoaded) {\n    return <div>Loading...</div>\n  } else {\n    return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.text}>\n          Drivers\n        </Typography>\n        <Typography className={classes.num} color=\"textPrimary\">\n          {drivers.length}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          Drivers\n        </Typography>\n      </CardContent>\n    </Card>\n    )\n  }\n\n}\n\nexport default CardDriver;","/home/alazar/Desktop/Inspection-Dashboard/src/components/Charts/Chart.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":19,"column":7,"nodeType":"110","messageId":"111","endLine":19,"endColumn":11},{"ruleId":"108","severity":1,"message":"112","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":19},{"ruleId":"108","severity":1,"message":"113","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":14},{"ruleId":"108","severity":1,"message":"112","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":19},{"ruleId":"108","severity":1,"message":"113","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":14},{"ruleId":"108","severity":1,"message":"112","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":19},{"ruleId":"108","severity":1,"message":"113","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":14},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'rows' is assigned a value but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]