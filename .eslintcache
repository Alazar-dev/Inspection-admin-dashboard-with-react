[{"/home/alazar/Desktop/Inspection-Dashboard/src/index.js":"1","/home/alazar/Desktop/Inspection-Dashboard/src/serviceWorker.js":"2","/home/alazar/Desktop/Inspection-Dashboard/src/App.js":"3","/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateLayout.js":"4","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Dashboard.js":"5","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Inspect.js":"6","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/auth/Login.js":"7","/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateNavContent.js":"8","/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateHeader.js":"9","/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateContent.js":"10","/home/alazar/Desktop/Inspection-Dashboard/src/layouts/SharedFooter.js":"11","/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateNavHeader.js":"12","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Navigation.js":"13","/home/alazar/Desktop/Inspection-Dashboard/src/components/Cards/CardUser.js":"14","/home/alazar/Desktop/Inspection-Dashboard/src/components/Cards/CardVehicle.js":"15","/home/alazar/Desktop/Inspection-Dashboard/src/components/Cards/CardDriver.js":"16","/home/alazar/Desktop/Inspection-Dashboard/src/components/Tables/DriverTable.jsx":"17","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Settings.js":"18","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Drivers.js":"19","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Vehicles.js":"20","/home/alazar/Desktop/Inspection-Dashboard/src/components/Charts/Chart.jsx":"21","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Users.js":"22","/home/alazar/Desktop/Inspection-Dashboard/src/components/Tables/UserTable.jsx":"23","/home/alazar/Desktop/Inspection-Dashboard/src/components/Tables/VehicleTable.jsx":"24","/home/alazar/Desktop/Inspection-Dashboard/src/components/Modals/UserModal.jsx":"25","/home/alazar/Desktop/Inspection-Dashboard/src/components/Forms/UserForm.jsx":"26"},{"size":430,"mtime":1612523920552,"results":"27","hashOfConfig":"28"},{"size":5085,"mtime":1611573698839,"results":"29","hashOfConfig":"28"},{"size":1911,"mtime":1612855884474,"results":"30","hashOfConfig":"28"},{"size":2435,"mtime":1612524893486,"results":"31","hashOfConfig":"28"},{"size":1015,"mtime":1612868701790,"results":"32","hashOfConfig":"28"},{"size":14504,"mtime":1612853340448,"results":"33","hashOfConfig":"28"},{"size":1330,"mtime":1611991870953,"results":"34","hashOfConfig":"28"},{"size":2138,"mtime":1612773063246,"results":"35","hashOfConfig":"28"},{"size":2948,"mtime":1612871476802,"results":"36","hashOfConfig":"28"},{"size":445,"mtime":1612524615296,"results":"37","hashOfConfig":"28"},{"size":652,"mtime":1612868629842,"results":"38","hashOfConfig":"28"},{"size":1079,"mtime":1611829803971,"results":"39","hashOfConfig":"28"},{"size":251,"mtime":1612871423567,"results":"40","hashOfConfig":"28"},{"size":1647,"mtime":1612853246333,"results":"41","hashOfConfig":"28"},{"size":1701,"mtime":1612853258081,"results":"42","hashOfConfig":"28"},{"size":1695,"mtime":1612854016473,"results":"43","hashOfConfig":"28"},{"size":2700,"mtime":1612864149284,"results":"44","hashOfConfig":"28"},{"size":264,"mtime":1612855607395,"results":"45","hashOfConfig":"28"},{"size":223,"mtime":1612855557904,"results":"46","hashOfConfig":"28"},{"size":195,"mtime":1612856241079,"results":"47","hashOfConfig":"28"},{"size":803,"mtime":1612855635989,"results":"48","hashOfConfig":"28"},{"size":225,"mtime":1612871409477,"results":"49","hashOfConfig":"28"},{"size":2252,"mtime":1612857217384,"results":"50","hashOfConfig":"28"},{"size":2278,"mtime":1612863512018,"results":"51","hashOfConfig":"28"},{"size":1704,"mtime":1612873029738,"results":"52","hashOfConfig":"28"},{"size":651,"mtime":1612871874021,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"17imko8",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/home/alazar/Desktop/Inspection-Dashboard/src/index.js",[],["116","117"],"/home/alazar/Desktop/Inspection-Dashboard/src/serviceWorker.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/App.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateLayout.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Dashboard.js",["118"],"import { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport CardUser from '../Cards/CardUser';\nimport CardDriver from \"../Cards/CardDriver\";\nimport CardVehicle from '../Cards/CardVehicle';\n\nimport Chart from '../Charts/Chart'\n\nconst useStyles = makeStyles(() => ({\n    grid: {\n        width: '100%',\n        margin: '0px'\n    }\n}))\nconst DashboardPage = () => {\n\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Grid justify=\"center\" spacing={2} container>\n                <Grid item xs={3}>\n                    <CardUser />       \n                </Grid>\n                <Grid item xs={3}>\n                    <CardDriver />       \n                </Grid>\n                <Grid item xs={3}>\n                    <CardVehicle />       \n                </Grid>\n                <Grid item justify=\"center\"xs={12}>\n                    <Chart />    \n                </Grid>\n            </Grid>\n        </div>\n\n    );\n}\n\n\nexport default DashboardPage;","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Inspect.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/auth/Login.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateNavContent.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateHeader.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateContent.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/layouts/SharedFooter.js",["119","120"],"import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst SharedFooter = () => (\n    <div style={{ maxWidth: 700, margin: 'auto', textAlign: 'center' }}>\n        {/* <Typography variant=\"caption\" align={'center'}> */}\n            {/* {'Copyright Â© '}\n            <Link\n                color=\"inherit\"\n                href=\"http://www.my-company.com\"\n                target=\"_blank\"\n                rel=\"noreferrer\">\n                My Company\n            </Link>{' '}\n            {new Date().getFullYear()}\n        </Typography> */}\n    </div>\n);\n\nexport default SharedFooter;\n","/home/alazar/Desktop/Inspection-Dashboard/src/layouts/PrivateNavHeader.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Navigation.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/Cards/CardUser.js",["121","122"],"import { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { useState, useEffect } from 'react';\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 300,\n    // marginLeft: 40,\n    backgroundColor: 'yellow',\n    margin: '0px 50px',\n  },\n  title: {\n    fontSize: 14,\n  },\n  text: {\n    fontSize: 30\n  },\n  num: {\n    fontSize: 50,\n    marginTop: 15\n  },\n\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst CardUser =() => {\n  const classes = useStyles();\n\nconst [ error, setError ] = useState(null) ;\nconst [ isLoaded, setIsLoaded ] = useState(false);\nconst [ users, setUsers ] = useState([]);\nuseEffect(() => {\n  fetch('https://mighty-earth-67652.herokuapp.com/api/user')\n  .then(res => res.json())\n  .then(\n    (result) => {\n      setIsLoaded(true)\n      setUsers(result)\n    },\n    (error) => {\n      setIsLoaded(true)\n      setError(error)\n    }\n  )\n},[])\n\nif (!isLoaded) {\n  return <div>Loading</div>\n} else if (error) {\n  <div>{error.message}</div>\n} else {\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography>\n          Users\n        </Typography>\n        <Typography className={classes.num} color=\"textPrimary\">\n          {users.length}\n        </Typography>\n        <Typography className={classes.text} variant=\"body2\" component=\"p\">\n          Users\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n\n\n}\n\nexport default CardUser;","/home/alazar/Desktop/Inspection-Dashboard/src/components/Cards/CardVehicle.js",["123","124"],"import { makeStyles } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 300,\n    backgroundColor: 'red',\n    margin: '0px 50px'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  num: {\n    fontSize: 50,\n    marginTop: 15,\n  },\n  text: {\n    fontSize: 30\n  }\n});\n\nconst CardVehicle = () => {\n  const classes = useStyles();\n\n  const [ error, setError ] = useState(null);\n  const [ isLoaded, setIsLoaded ] = useState(false);\n  const [ vehicles, setVehicles ] = useState([])\n\n  useEffect(() => {\n    fetch('https://mighty-earth-67652.herokuapp.com/api/vehicle')\n    .then(res => res.json())\n    .then(\n      (result) => {\n        setIsLoaded(true)\n        setVehicles(result)\n      },\n      (error) => {\n        setIsLoaded(true)\n        setError(error)\n      }\n    )\n  }, [])\n\n  if (!isLoaded) {\n    return <div>Loading...</div>\n  } else if (error){\n    <div>{error.message}</div>\n  } else {\n    return (\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography>\n            Vehicles\n          </Typography>\n          <Typography className={classes.num} variant=\"body2\" component=\"p\">\n            {vehicles.length}\n          </Typography>\n          <Typography className={classes.text}>\n            Vehicles\n          </Typography>\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\nexport default CardVehicle;","/home/alazar/Desktop/Inspection-Dashboard/src/components/Cards/CardDriver.js",["125","126"],"import { makeStyles } from '@material-ui/core/styles';\nimport { useState, useEffect } from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 300,\n    backgroundColor: 'green',\n    margin: '0px 50px'\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  num: {\n    fontSize: 50,\n    marginTop: 15\n  },\n  text: {\n    fontSize: 30\n  }\n});\n\nconst CardDriver = () => {\n  const classes = useStyles();\n\n  const [ error, setError ] = useState(null);\n  const [ isLoaded, setIsLoaded ] = useState(false);\n  const [ drivers, setDrivers ] = useState([])\n\n  useEffect(() => {\n    fetch('https://mighty-earth-67652.herokuapp.com/api/driver')\n    .then(res => res.json())\n    .then(\n      (result) => {\n        setIsLoaded(true)\n        setDrivers(result);\n      },\n      (error) => {\n        setIsLoaded(true)\n        setError(null)\n      }\n    )\n  }, [])\n\n  if (error) {\n    return <div>{error.message}</div>\n  } else if (!isLoaded) {\n    return <div>Loading...</div>\n  } else {\n    return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography>\n          Drivers\n        </Typography>\n        <Typography className={classes.num} color=\"textPrimary\">\n          {drivers.length}\n        </Typography>\n        <Typography className={classes.text} variant=\"body2\" component=\"p\">\n          Drivers\n        </Typography>\n      </CardContent>\n    </Card>\n    )\n  }\n\n}\n\nexport default CardDriver;","/home/alazar/Desktop/Inspection-Dashboard/src/components/Tables/DriverTable.jsx",["127"],"import { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst DriverTable = () => {\n\n    const [ error, setError ] = useState(null);\n    const [ isLoaded, setIsLoaded ] = useState(false);\n    const [ drivers, setDrivers ] = useState([])\n\n    useEffect(() => {\n        fetch('https://mighty-earth-67652.herokuapp.com/api/driver')\n        .then(res => res.json())\n        .then(\n            (result) => {\n                setIsLoaded(true)\n                setDrivers(result)\n            },\n            (error) => {\n                setIsLoaded(true)\n                setError(error)\n            }\n        )\n    }, [])\n\n    if (!isLoaded) {\n        return <div>Loading...</div>\n    } else if (error) {\n        return <div>{error.message}</div>\n    } else {\n        return (\n            <Table aria-label=\"simple table\">\n            <TableHead>\n                <TableRow>\n                <TableCell align=\"left\">First Name</TableCell>\n                <TableCell align=\"left\">Last Name</TableCell>\n                <TableCell align=\"left\">Phone Number</TableCell>\n                <TableCell align=\"left\">Age</TableCell>\n                <TableCell align=\"left\">Gender</TableCell>\n                <TableCell align=\"left\">Birth Date</TableCell>\n                <TableCell align=\"left\">Plate Number</TableCell>\n                <TableCell align=\"left\">License Number</TableCell>\n                <TableCell align=\"left\">Photo</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {drivers.map((driver) => (\n                <TableRow key={driver.id}>\n                    <TableCell align=\"left\">{driver.first_name}</TableCell>\n                    <TableCell align=\"left\">{driver.last_name}</TableCell>\n                    <TableCell align=\"left\">{driver.phone_number}</TableCell>\n                    <TableCell align=\"left\">{driver.age}</TableCell>\n                    <TableCell align=\"left\">{driver.gender}</TableCell>\n                    <TableCell align=\"left\">{driver.birth_date}</TableCell>\n                    <TableCell align=\"left\">{driver.plate_number}</TableCell>\n                    <TableCell align=\"left\">{driver.license_number}</TableCell>\n                    <TableCell align=\"left\">{driver.photo}</TableCell>\n                </TableRow>\n                ))}\n            </TableBody>\n            </Table>\n        )\n    }\n}\nexport default DriverTable;","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Settings.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Drivers.js",["128","129"],"import { useState, useEffect } from 'react';\n\nimport DriverTable from '../Tables/DriverTable'\n\nconst Drivers = () => {\n\n    return (\n        <div>\n            <DriverTable />\n        </div>\n    )\n}\n\n\nexport default Drivers;","/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Vehicles.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/Charts/Chart.jsx",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/pages/Users.js",[],"/home/alazar/Desktop/Inspection-Dashboard/src/components/Tables/UserTable.jsx",["130"],"import { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useState, useEffect } from 'react';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\n\nexport default function BasicTable() {\n  const classes = useStyles();\n\n  const [ error, setError ] = useState(null);\n  const [ isLoaded, setIsLoaded ] = useState(false);\n  const [ users, setUsers ] = useState([])\n\n  useEffect(() => {\n      fetch('https://mighty-earth-67652.herokuapp.com/api/user')\n      .then(res => res.json())\n      .then(\n          (result) => {\n              setIsLoaded(true)\n              setUsers(result)\n          },\n          (error) => {\n              setIsLoaded(true)\n              setError(error)\n          }\n      )\n  }, [])\n\n  if (error) {\n      return <div>{error.message}</div>\n  } else if (!isLoaded) {\n      return <div>Loading...</div>\n  } else {\n      return (\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>First Name</TableCell>\n              <TableCell align=\"left\">Last Name</TableCell>\n              <TableCell align=\"left\">Email</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.map((user) => (\n              <TableRow key={user.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {user.name}\n                </TableCell>\n                <TableCell align=\"left\"></TableCell>\n                <TableCell align=\"left\">{user.email}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )\n  }\n  \n}\n","/home/alazar/Desktop/Inspection-Dashboard/src/components/Tables/VehicleTable.jsx",["131"],"import { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst VehicleTable = () => {\n\n    const [ error, setError ] = useState(null);\n    const [ isLoaded, setIsLoaded ] = useState(false);\n    const [ vehicles, setVehicles ] =useState([]);\n\n    useEffect(() => {\n        fetch('https://mighty-earth-67652.herokuapp.com/api/vehicle')\n        .then(res => res.json())\n        .then(\n            (result) => {\n                setIsLoaded(true)\n                setVehicles(result)\n            },\n            (error) => {\n                setIsLoaded(true)\n                setError(error)\n            }\n        )\n\n    }, [])\n    \n    if (!isLoaded) {\n        return <div>Loading...</div>\n    } else if (error) {\n        return <div>{error.message}</div>\n    } else {\n        return (\n            <Table aria-label=\"simple table\">\n            <TableHead>\n                <TableRow>\n                <TableCell>Reg Number</TableCell>\n                <TableCell align=\"left\">Maker</TableCell>\n                <TableCell align=\"left\">Model</TableCell>\n                <TableCell align=\"left\">Year</TableCell>\n                <TableCell align=\"left\">Color</TableCell>\n                <TableCell align=\"left\">Owner name</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {vehicles.map((vehicle) => (\n                <TableRow key={vehicle.id}>\n                    <TableCell align=\"left\">{vehicle.registration_number}</TableCell>\n                    <TableCell align=\"left\">{vehicle.maker}</TableCell>\n                    <TableCell align=\"left\">{vehicle.model}</TableCell>\n                    <TableCell align=\"left\">{vehicle.year}</TableCell>\n                    <TableCell align=\"left\">{vehicle.color}</TableCell>\n                    <TableCell align=\"left\">{vehicle.owner_name}</TableCell>\n\n                </TableRow>\n                ))}\n            </TableBody>\n            </Table>\n        )\n    }\n\n}\n\nexport default VehicleTable;","/home/alazar/Desktop/Inspection-Dashboard/src/components/Modals/UserModal.jsx",["132","133"],"/home/alazar/Desktop/Inspection-Dashboard/src/components/Forms/UserForm.jsx",[],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":18,"column":11,"nodeType":"140","messageId":"141","endLine":18,"endColumn":18},{"ruleId":"138","severity":1,"message":"142","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":18},{"ruleId":"138","severity":1,"message":"143","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":12},{"ruleId":"138","severity":1,"message":"144","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":19},{"ruleId":"138","severity":1,"message":"145","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":14},{"ruleId":"138","severity":1,"message":"144","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":19},{"ruleId":"138","severity":1,"message":"145","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":14},{"ruleId":"138","severity":1,"message":"144","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":19},{"ruleId":"138","severity":1,"message":"145","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":14},{"ruleId":"138","severity":1,"message":"146","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":20},{"ruleId":"138","severity":1,"message":"147","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":18},{"ruleId":"138","severity":1,"message":"148","line":1,"column":20,"nodeType":"140","messageId":"141","endLine":1,"endColumn":29},{"ruleId":"138","severity":1,"message":"149","line":18,"column":7,"nodeType":"140","messageId":"141","endLine":18,"endColumn":11},{"ruleId":"138","severity":1,"message":"146","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":20},{"ruleId":"138","severity":1,"message":"139","line":34,"column":9,"nodeType":"140","messageId":"141","endLine":34,"endColumn":16},{"ruleId":"138","severity":1,"message":"150","line":36,"column":10,"nodeType":"140","messageId":"141","endLine":36,"endColumn":20},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'Link' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'makeStyles' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'rows' is assigned a value but never used.","'modalStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]